/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JavaNetbeans_mysql_Conn;

import com.libmgr.dao.DbHelper;
import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author DELL
 */
public class bookSearchScreen extends javax.swing.JInternalFrame {

    //JInternalFrame.setTitle("Search books");
    /**
     * Creates new form bookSearchScreen
     */
    public bookSearchScreen() {
        initComponents();
        //btnSearch.setEnabled(false);
    }

    //method to convert the String entered as id by the user to integer
    public Integer convertToInt(String Id) {
        try {
            int identered = Integer.parseInt(Id);
            return identered;
        } catch (NumberFormatException e) {
            return -1;
        }
    }
    
    
    public Vector<Vector<Object>> SearchBooks(String searchKey){
         try{
             Connection connect = DbHelper.getConnection("");
              
              
             String searchQuery = "select * from books where ISBN=? or BookName like ? or AuthorName like ? or pubDate like ?";
             PreparedStatement statement = connect.prepareStatement(searchQuery);
             
             statement.setString(1, searchKey);
             statement.setString(2, "%"+searchKey+"%");
             statement.setString(3,"%"+searchKey+"%");
             statement.setString(4,"%"+searchKey+"%");
             
             System.out.println("Prepared Statement = "+statement.toString());
             
          
             var searchTxt = searchField.getText();         
            Vector<Vector<Object>> tableData = new Vector<>();
                         
           String booksQuery = "select * from books";
            var booksResultSet = DbHelper.executeQuery(booksQuery);  
            
            while (booksResultSet.next()) {
                    Vector<Object> row = new Vector<>();
                    row.add(booksResultSet.getInt("bookId"));
                    row.add(booksResultSet.getString("BookName"));
                    row.add(booksResultSet.getString("AuthorName"));
                    row.add(booksResultSet.getString("ISBN"));
                    row.add(booksResultSet.getString("pubDate"));
                    
                    tableData.add(row);
                }    
             
                 return tableData;
            //   return searchResult;
         }catch(Exception e){
             System.out.println(e);
              return new Vector<>();
         }
              
     } 

      /* public BookModel bksearch(String searchKey) {

        try {
            String query = "select * from books where BookName like ? or AuthorName like ? or ISBN = ? or pubDate like ? or bookId = ?";
            Connection connect = DbHelper.getConnection("");
            PreparedStatement statement = connect.prepareStatement(query);

           // var searchTxt = searchField.getText();
           // searchKey = searchField.getText();
            statement.setString(1, "%" + searchKey + "%");
            statement.setString(2, "%" + searchKey + "%");
            statement.setString(3, "%" + searchKey + "%");
            statement.setString(4, "%" + searchKey + "%");
            statement.setInt(5, convertToInt(searchKey));

            ResultSet result = statement.executeQuery();

            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error occured while searching book");
            return null;
        }
        return null;
    }        
    */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(19, 19, 19))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "bookName", "Author", "ISBN", "pubDate"
            }
        ));
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        var searchTxt = searchField.getText();
        
        //Vector<Vector<Object>> searchResult = DbHelper.SearchBooks(searchTxt);
        Vector<Vector<Object>> searchResult = new Vector<Vector<Object>>(SearchBooks(searchTxt));
        if(searchResult.size()>0){
            
            Vector columnNames = new Vector();
            columnNames.add("bokId");
            columnNames.add("BookName");
            columnNames.add("AuthorName");
            columnNames.add("ISBN");
            columnNames.add("pubDate");
            
            TableModel tableModel = new DefaultTableModel(searchResult, columnNames);
            jTable1.setModel(tableModel);
        }else{
            jTable1.setModel(new DefaultTableModel());
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
